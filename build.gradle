plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot Starter Validation: 데이터 유효성 검사를 위한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 시 Lombok 애노테이션을 처리하기 위한 설정

    // JWT 관련 라이브러리
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5' // JWT API 라이브러리, 컴파일 시에만 필요
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5' // JWT 구현 라이브러리, 런타임 시에만 필요
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5' // JWT를 JSON으로 변환하기 위한 Jackson 라이브러리, 런타임 시에만 필요

    // JSON 라이브러리: JSON 데이터를 처리하기 위한 라이브러리
    implementation 'org.json:json:20230227'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
